{"dependencies":[{"name":"/Users/cody/Dev/github/atom-next/tsconfig.json","includedInParent":true,"mtime":1518109073000},{"name":"./atom","loc":{"line":3,"column":23}}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst atom_1 = require(\"./atom\");\nconst seed = atom_1.Atom.value(1, 'seed');\nconst b = atom_1.Atom.calc(() => {\n    return seed.get() + 10 + e.get();\n}, 'b');\nconst c = atom_1.Atom.calc(() => {\n    return 5 + b.get();\n}, 'c');\nconst d = atom_1.Atom.calc(() => {\n    return c.get();\n}, 'd');\nconst y = atom_1.Atom.calc(() => {\n    return atom_1.Atom.value(103);\n});\n// const x = Atom.autorun(() => {\n//     var xx = Atom.value(103, 'inner');\n//     xx.get();\n//     xx.set(100);\n//     run();\n//     debugger;\n// }, 'outer');\nconst e = atom_1.Atom.calc(() => {\n    return b.get();\n}, 'e');\nvar autorun = atom_1.Atom.autorun(() => {\n    return d.get();\n}, 'autorun');\n// declare const global: any;\n// global.seed = seed;\n// global.b = b;\n// global.c = c;\n// global.d = d;\n// console.log(d.get());\nseed.set(2);\n// seed.set(3);\n// // console.log(seed.slaves[0]);\n// // console.log(c);\n// // d.get();\n// // console.log(d.get());\n// // console.log(autorun);\natom_1.run();\n","map":{"version":3,"file":"tests2.js","sourceRoot":"","sources":["tests2.ts"],"names":[],"mappings":";;AAAA,iCAAmC;AAEnC,MAAM,IAAI,GAAG,WAAI,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;AACnC,MAAM,CAAC,GAAG,WAAI,CAAC,IAAI,CAAC,GAAG,EAAE;IACrB,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;AACrC,CAAC,EAAE,GAAG,CAAC,CAAC;AACR,MAAM,CAAC,GAAG,WAAI,CAAC,IAAI,CAAC,GAAG,EAAE;IACrB,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;AACvB,CAAC,EAAE,GAAG,CAAC,CAAC;AACR,MAAM,CAAC,GAAG,WAAI,CAAC,IAAI,CAAC,GAAG,EAAE;IACrB,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;AACnB,CAAC,EAAE,GAAG,CAAC,CAAC;AAER,MAAM,CAAC,GAAG,WAAI,CAAC,IAAI,CAAC,GAAG,EAAE;IACrB,MAAM,CAAC,WAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC;AACH,iCAAiC;AACjC,yCAAyC;AACzC,gBAAgB;AAChB,mBAAmB;AACnB,aAAa;AACb,gBAAgB;AAChB,eAAe;AAEf,MAAM,CAAC,GAAG,WAAI,CAAC,IAAI,CAAC,GAAG,EAAE;IACrB,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;AACnB,CAAC,EAAE,GAAG,CAAC,CAAC;AAER,IAAI,OAAO,GAAG,WAAI,CAAC,OAAO,CAAC,GAAG,EAAE;IAC5B,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;AACnB,CAAC,EAAE,SAAS,CAAC,CAAC;AAEd,6BAA6B;AAC7B,sBAAsB;AACtB,gBAAgB;AAChB,gBAAgB;AAChB,gBAAgB;AAEhB,wBAAwB;AACxB,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACZ,eAAe;AAEf,kCAAkC;AAClC,qBAAqB;AAErB,cAAc;AACd,2BAA2B;AAC3B,2BAA2B;AAC3B,UAAG,EAAE,CAAC","sourcesContent":["import { Atom, run } from './atom';\n\nconst seed = Atom.value(1, 'seed');\nconst b = Atom.calc(() => {\n    return seed.get() + 10 + e.get();\n}, 'b');\nconst c = Atom.calc(() => {\n    return 5 + b.get();\n}, 'c');\nconst d = Atom.calc(() => {\n    return c.get();\n}, 'd');\n\nconst y = Atom.calc(() => {\n    return Atom.value(103);\n});\n// const x = Atom.autorun(() => {\n//     var xx = Atom.value(103, 'inner');\n//     xx.get();\n//     xx.set(100);\n//     run();\n//     debugger;\n// }, 'outer');\n\nconst e = Atom.calc(() => {\n    return b.get();\n}, 'e');\n\nvar autorun = Atom.autorun(() => {\n    return d.get();\n}, 'autorun');\n\n// declare const global: any;\n// global.seed = seed;\n// global.b = b;\n// global.c = c;\n// global.d = d;\n\n// console.log(d.get());\nseed.set(2);\n// seed.set(3);\n\n// // console.log(seed.slaves[0]);\n// // console.log(c);\n\n// // d.get();\n// // console.log(d.get());\n// // console.log(autorun);\nrun();\n"]}},"hash":"242380e6a8b60627bc92ecbe1b31cdb0","cacheData":{"env":{}}}